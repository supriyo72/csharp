using System;

public class TrycatchExp
{
    public static void Main(string[] args)
    {
        try{
            Console.WriteLine("Enter no1");
            int x= int.Parse(Console.ReadLine());
            Console.WriteLine("Enter no2");
            int y= int.Parse(Console.ReadLine());
            int z=x/y;
        }
        catch(DivideByZeroException ex1)
        {
            Console.WriteLine(ex1.Message);
        }
        catch(FormatException ex2)
        {
            Console.WriteLine(ex2.Message);
        }
        catch(Exception ex)
        {
            Console.WriteLine(ex.Message);
            Console.WriteLine("Tata Bye Bye");
        }
        Console.WriteLine("End of the Program");
    }

}
//op
Enter no1
100
Enter no2
777777777777777777777777777777777
Value was either too large or too small for an Int32.
Tata Bye Bye
End of the Program

//op
Enter no1
100
Enter no2
y
Input string was not in a correct format.
End of the Program

//op
Enter no1
100
Enter no2
0
Attempted to divide by zero.
End of the Program

//op
Enter no1
24
Enter no2
12
End of the Program

.............................................................................................................................

using System;

public class TrycatchExp
{
    public static void Main(string[] args)
    {
            Console.WriteLine("Enter no1");
            int x= int.Parse(Console.ReadLine());
            Console.WriteLine("Enter no2");
            int y= int.Parse(Console.ReadLine());
            
            if(y%2 > 0)
            {
                throw new ApplicationException("Divisor value can't be odd!!");
            }
            int z=x/y;
        Console.WriteLine($"Result : {z}");
        Console.WriteLine("End of the Program");
    }
}
//op
Enter no1
100
Enter no2
21
Unhandled Exception:
System.ApplicationException: Divisor value can't be odd!!
  at TrycatchExp.Main (System.String[] args) [0x00038] in <76d49f88c8d549df818969e9a34c4aaf>:0
[ERROR] FATAL UNHANDLED EXCEPTION: System.ApplicationException: Divisor value can't be odd!!
  at TrycatchExp.Main (System.String[] args) [0x00038] in <76d49f88c8d549df818969e9a34c4aaf>:0
.....................................................................................................
using System;

public class TrycatchExp
{
    public static void Main(string[] args)
    {
            Console.WriteLine("Enter no1");
            int x= int.Parse(Console.ReadLine());
            Console.WriteLine("Enter no2");
            int y= int.Parse(Console.ReadLine());
            
            if(y%2 > 0)
            {
                throw new ApplicationException("Divisor value can't be odd!!");
            }
            int z=x/y;
        Console.WriteLine($"Result : {z}");
        Console.WriteLine("End of the Program");
    }
}

//op
Enter no1
100
Enter no2
0
Unhandled Exception:
System.DivideByZeroException: Attempted to divide by zero.
  at TrycatchExp.Main (System.String[] args) [0x00043] in <196dcf4aefbc46878d8188303118ed03>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: System.DivideByZeroException: Attempted to divide by zero.
  at TrycatchExp.Main (System.String[] args) [0x00043] in <196dcf4aefbc46878d8188303118ed03>:0 
.....................................................................................................

using System;

public class TrycatchExp
{
    public static void Main(string[] args)
    {
        try{
            Console.WriteLine("Enter no1");
            int x= int.Parse(Console.ReadLine());
            Console.WriteLine("Enter no2");
            int y= int.Parse(Console.ReadLine());
            int z=x/y;
            Console.WriteLine($"The result is: {z}");
        }
        catch(Exception ex)
        {
            Console.WriteLine(ex.Message);
            Console.WriteLine("Tata Bye Bye");
        }
        finally
        {
            Console.WriteLine("Finally End of the Program");
        }
    }

}
//op
Enter no1
500
Enter no2
25
5
The result is: 20
Finally End of the Program

//op
Enter no1
500
Enter no2
m
Input string was not in a correct format.
Tata Bye Bye
Finally End of the Program

//op
Enter no1
200
Enter no2
777777777777777777777777777777
Value was either too large or too small for an Int32.
Tata Bye Bye
Finally End of the Program

......................................................................................................
using System;
public class TrycatchExp
{
    public static void Main(string[] args)
    {
        try{
            Console.WriteLine("Enter no1");
            int x= int.Parse(Console.ReadLine());
            Console.WriteLine("Enter no2");
            int y= int.Parse(Console.ReadLine());
            if(y==1)
            {
                return;
            }
            int z=x/y;
            Console.WriteLine($"The result is: {z}");
        }
        catch(Exception ex)
        {
            Console.WriteLine(ex.Message);
            Console.WriteLine("Tata Bye Bye");
        }
        finally
        {
            Console.WriteLine("Finally End of the Program");
        }
        Console.WriteLine("DONE");
    }
}

//op
Enter no1
100
Enter no2
1
Finally End of the Program
............................................................................................
using System;
public class DivisorCannotBeOdd : ApplicationException
{
    public override string Message
    {
        get
        {
            return "Divisor value can't be odd!!";
            
        }
    }
}
public class TrycatchExp
{
    public static void Main(string[] args)
    {
            Console.WriteLine("Enter no1");
            int x= int.Parse(Console.ReadLine());
            Console.WriteLine("Enter no2");
            int y= int.Parse(Console.ReadLine());
            
            if(y%2 > 0)
            {
                throw new DivisorCannotBeOdd();
            }
            int z=x/y;
        Console.WriteLine($"Result : {z}");
        Console.WriteLine("End of the Program");
    }
}

//op
Enter no1
154
Enter no2
13
Unhandled Exception:
DivisorCannotBeOdd: Divisor value can't be odd!!
  at TrycatchExp.Main (System.String[] args) [0x0003d] in <bc994dd822694f709ea7f4a752b04012>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: DivisorCannotBeOdd: Divisor value can't be odd!!
  at TrycatchExp.Main (System.String[] args) [0x0003d] in <bc994dd822694f709ea7f4a752b04012>:0 
..........................................................................................................
using System;
using System.IO;
using System.Runtime.Serialization;
public class UserInfoException : Exception
{
    public UserInfoException():base()
    {}
    public UserInfoException(string message) : base(message)
    {}
    public UserInfoException(string message, Exception innerException) : base(message,innerException)
    {}
    public UserInfoException(SerializationInfo info,StreamingContext context) : base(info,context)
    {}
}
public class TrycatchExp
{
    public static void Main(string[] args)
    {
        try{
            throw new UserInfoException("No duplicates allowed");
        }catch(UserInfoException ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
}

//op
No duplicates allowed

............................................................................................
using System;
using System.IO;
using System.Runtime.Serialization;
public class TrycatchExp
{
    public static void Main(string[] args)
    {
        Console.WriteLine("Enter your age: ");
        int age= int.Parse(Console.ReadLine());
        
        if(age>=18)
        {
            Console.WriteLine("Eligible");
        }else{
            throw new Exception("You are not eligible");
        }
    }
}

//op
Enter your age: 
14
Unhandled Exception:
System.Exception: You are not eligible
  at TrycatchExp.Main (System.String[] args) [0x00033] in <4a8a7f76ce6e443f80bf5932d53f8633>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: System.Exception: You are not eligible
  at TrycatchExp.Main (System.String[] args) [0x00033] in <4a8a7f76ce6e443f80bf5932d53f8633>:0 
  
.......................................................................................................
using System;
using System.IO;
using System.Runtime.Serialization;
public class TrycatchExp
{
    public static void Main(string[] args)
    {
        Console.WriteLine("Enter your age: ");
        int age= int.Parse(Console.ReadLine());
        
        
        try{
            if(age>=18)
            {
                Console.WriteLine("Eligible");
            }
            else
            {
                throw new Exception("You are not eligible");
            }
        }
        catch(Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
}
//op

Enter your age: 
12
You are not eligible
.................................................................................................................
using System;
using System.IO;
using System.Runtime.Serialization;
public class TrycatchExp
{
    public static void Main(string[] args)
    {
        Console.WriteLine("Enter Account balance: ");
        int acc= int.Parse(Console.ReadLine());
        Console.WriteLine("Enter withdrawl amount: ");
        int withd= int.Parse(Console.ReadLine());
        
        
        if(acc<withd)
        {
            throw new Exception("Withdrawl amount higher than the balance amount");
        }
        else{
            int Totacc=acc-withd;
            Console.WriteLine($"Total balance remaining: {Totacc}");
        }
        
    }
}

//op
Enter Account balance: 
1000
Enter withdrawl amount: 5000
Unhandled Exception:
System.Exception: Withdrawl amount higher than the balance amount
  at TrycatchExp.Main (System.String[] args) [0x00036] in <c4af36286cdd4922a67769f81ba7d62f>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: System.Exception: Withdrawl amount higher than the balance amount
  at TrycatchExp.Main (System.String[] args) [0x00036] in <c4af36286cdd4922a67769f81ba7d62f>:0 
  
  //op
  
  Enter Account balance: 
10000
Enter withdrawl amount: 
2000
Total balance remaining: 8000

....................................................................................................................
using System;
using System.IO;
using System.Runtime.Serialization;
public class TrycatchExp
{
    public static void Main(string[] args)
    {
        Console.WriteLine("Enter Account balance: ");
        int acc= int.Parse(Console.ReadLine());
        Console.WriteLine("Enter withdrawl amount: ");
        int withd= int.Parse(Console.ReadLine());
        
        try{
            if(acc<withd)
            {
                throw new Exception("Withdrawl amount higher than the balance amount");
            }
            else{
                int Totacc=acc-withd;
                Console.WriteLine($"Total balance remaining: {Totacc}");
            }
        }
        catch(Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
        
    }
}

//op

Enter Account balance: 
1000
Enter withdrawl amount: 
5000
Withdrawl amount higher than the balance amount

.......................................................................................
using System;
public class Program{
    public static void Main(){
        Console.WriteLine("Enter the start date(dd/MM/yyyy hh:mm:ss tt):");
        string start = Console.ReadLine();
        Console.WriteLine("Enter the end date(dd/MM/yyyy hh:mm:ss tt):");
        string end = Console.ReadLine();

        try
        {
            DateTime startD= DateTime.ParseExact(start,"dd/MM/yyyy hh:mm:ss tt",null);
            DateTime endD= DateTime.ParseExact(end,"dd/MM/yyyy hh:mm:ss tt",null);

            Console.WriteLine($"Starting Date: {startD.ToString("dd/MM/yyyy hh:mm:ss tt")}");
            Console.WriteLine($"Ending Date: {endD.ToString("dd/MM/yyyy hh:mm:ss tt")}");
        }
        catch(FormatException)
        {
            Console.WriteLine("Invalid Date Format...");
        }
    }
}


Sample Input and Output 1:
Enter the start date(dd/MM/yyyy hh:mm:ss tt):
18/01/2018 09:00:00 AM
Enter the end date(dd/MM/yyyy hh:mm:ss tt):
18/01/2018 12:30:00 PM
Starting Date: 18/01/2018 09:00:00 AM
Ending Date: 18/01/2018 12:30:00 PM

Sample Input and Output 2:
Enter the start date(dd/MM/yyyy hh:mm:ss tt):
01/25/2017 09:00:00 AM
Enter the end date(dd/MM/yyyy hh:mm:ss tt):
01/25/2017 11:00:00 AM
Invalid Date Format...

Sample Input and Output 3:
Enter the start date(dd/MM/yyyy hh:mm:ss tt):
25/01/2018 14:00:00
Enter the end date(dd/MM/yyyy hh:mm:ss tt):
25/01/2018 16:00:00
Invalid Date Format...
